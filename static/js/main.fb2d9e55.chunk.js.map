{"version":3,"sources":["components/Clock.js","components/User.js","App.js","reportWebVitals.js","index.js"],"names":["Clock","state","date","Date","this","interval","setInterval","setState","clearInterval","props","title","toLocaleTimeString","Component","User","info","age","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAuBeA,E,kDApBX,aAAe,IAAD,8BACV,gBACKC,MAAQ,CAAEC,KAAM,IAAIC,MAFf,E,qDAOd,WAAqB,IAAD,OACjBC,KAAKC,SAAWC,aAAa,WAAQ,EAAKC,SAAS,CAACL,KAAM,IAAIC,SAAW,O,gCAE5E,WACIK,cAAcJ,KAAKC,Y,oBAGvB,WACI,OAAO,oCAAOD,KAAKK,MAAMC,MAAlB,IAA0BN,KAAKH,MAAMC,KAAKS,qBAA1C,W,GAhBKC,aCcLC,E,4JANX,WACI,OAAO,+BAAMT,KAAKK,MAAMK,KAAjB,MAA4BV,KAAKK,MAAMM,W,GAFnCH,aC8BJI,E,4JAnBb,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,+BAGA,+BACE,cAAC,EAAD,CAAMH,KAAK,UAAUC,IAAI,OACzB,cAAC,EAAD,CAAMD,KAAK,YACX,cAAC,EAAD,CAAMA,KAAK,eAEb,6BACE,cAAC,EAAD,CAAOJ,MAAM,4B,GAbLE,aCPHM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fb2d9e55.chunk.js","sourcesContent":["import { Component } from \"react\";\n\nclass Clock extends Component {\n    constructor() {\n        super();\n        this.state = { date: new Date() };\n    }\n\n\n    // React's component life cycle\n    componentDidMount() { // ตอนที่ component นี้เริ่มใช้\n       this.interval = setInterval( () => { this.setState({date: new Date()})}, 1000 ); // {ทำอะไร}, ทุกๆ 1000 ms\n    }\n    componentWillMount() { // ตอนที่ component นี้เลิกใช้\n        clearInterval(this.interval)\n    }\n\n    render() {\n        return <div> {this.props.title} {this.state.date.toLocaleTimeString()} </div>;  \n    }\n    \n}\n\nexport default Clock;\n","import { Component } from \"react\";\n\n// function User(props) {\n//     return <li>{ props.info }</li>;\n// }\n\n// export default User;\n\n\nclass User extends Component {\n    render() {\n        return <li>{ this.props.info } - { this.props.age }</li>;\n    }\n    \n}\n\nexport default User;\n","// // import logo from './logo.svg';\n// import './App.css';\n\n// const App = () => {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         Nonggap was here!       \n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport { Component } from \"react\";\nimport Clock from \"./components/Clock\";\nimport User from \"./components/User\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          Nonggap was here!       \n        </header>\n        <ul>\n          <User info=\"User 01\" age=\"25\"/>\n          <User info=\"User 02\"/>\n          <User info=\"User 03\"/>\n        </ul>\n        <hi>\n          <Clock title=\"Current date =\"/>\n        </hi>\n      </div>\n    )\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}